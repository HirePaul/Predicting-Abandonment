name: Run Predicting-Abandonment Tool

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly at midnight UTC on Sunday
  workflow_dispatch: # Manual trigger

jobs:
  run-tool:
    runs-on: ubuntu-latest # GitHub Actions uses Ubuntu runners

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x' # Adjust to the required version

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts  # Adds GitHub's SSH host to known hosts

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip wget
        python -m pip install --upgrade pip
        pip install pandas requests selenium beautifulsoup4
        pip install prompt_toolkit
        pip install openpyxl
        # Install Chrome and Chromedriver
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
        CHROMEDRIVER_VERSION=$(wget -qO- https://googlechromelabs.github.io/chrome-for-testing/ | grep -oP "$CHROME_VERSION" | head -1)
        wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip -d chromedriver
        sudo mv chromedriver/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver

    # Step 4: Run the tool
    - name: Run main.py script
      env:
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Provide the SSH key as an environment variable
      run: |
        echo -e "yes\nsrc/main/samples/500-sample.xlsx" | python src/main/main.py "rescrape" ${{ secrets.SSH_PRIVATE_KEY }}

    # Step 5: Upload results
    - name: Upload Results
      uses: actions/upload-artifact@v3
      with:
        name: tool-output
        path: path/to/outputs/* # Adjust this to match the script's output location
